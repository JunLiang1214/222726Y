@page
@model _222726Y.Pages.LoginModel
@{
}
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Options
@using ViewModels.GoogleCaptcha;
@using _222726Y.ViewModels.GoogleCaptcha
@inject IOptions<GoogleCaptchaConfig> GoogleCaptchaConfig
<div class="container mt-5">

	<div class="row justify-content-center align-items-center">

		<div class="col-sm-12 col-md-12 col-lg-4">
			<h1 class="mb-3">Login </h1>
			@if (!ModelState.IsValid)
			{
				@foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
				{
					<span style="color:red">*@modelError.ErrorMessage</span>
					<br />
				}
			}

				<form method="post">
					<input type="hidden" id="LoginToken" asp-for="LModel.Token"/>
				<div class="mb-3">
					<label class="form-label" asp-for="LModel.Email">Email Address</label>
					<input type="Text" asp-for="LModel.Email" class="form-control" />
					<span asp-validaton-for="LModel.Email" class="text-danger"></span>
				</div>

				<div class="mb-3">
					<label class="form-label" asp-for="LModel.Password">Password</label>
					<input type="Text" asp-for="LModel.Password" class="form-control" />
					<span asp-validaton-for="LModel.Password" class="text-danger"></span>
				</div>

				<div class="mb-3 form-check">
					<input type="checkbox" asp-for="LModel.RememberMe" class="form-check-input" />
					<label class="form-check-label" asp-for="LModel.RememberMe">Remember Me?</label>
				</div>

				<div class="mb-3">
					<button type="submit" class="btn btn-primary">Login</button>
				</div>
			</form>
		</div>
	</div>
</div>
<script src="https://www.google.com/recaptcha/api.js?render=@GoogleCaptchaConfig.Value.SiteKey"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>

	function getToken() { 
		grecaptcha.ready(function () {
			grecaptcha.execute('@GoogleCaptchaConfig.Value.SiteKey', { action: 'submit' }).then(function (token) {

				//to check only
				console.log(token);
				document.getElementById("LoginToken").value = token
			});
		});
	}
		//auto refresh
		setInterval(getToken, 115000);

	$(function() {
		getToken();
	})
	</script>